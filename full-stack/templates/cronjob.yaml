{{- $root := . -}}
{{- $env := .Values.global.env -}}
{{- $global := .Values.global -}}
{{- $provider := .Values.global.zone.provider -}}
{{- $defaults := .Values.serviceDefaults -}}

{{- range $serviceName, $service := .Values.services }}
{{- with $service }}
{{- if or (not (hasKey . "enabled")) (.enabled) }}
{{- range $job := .cronJobs }}
{{- with (index $root.Values.services $serviceName) }}
{{- if .verticalScaleUpdateMode }}
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: {{ template "myfullname" $root }}-{{ $serviceName }}-{{ $job.name }}
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: CronJob
    name: {{ template "myfullname" $root }}-{{ $serviceName }}-{{ $job.name }}
  updatePolicy:
    updateMode: {{ .verticalScaleUpdateMode }}
---
{{- end }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ template "myfullname" $root }}-{{ $serviceName }}-{{ $job.name }}
spec:
  schedule: {{ $job.schedule | quote }}
  concurrencyPolicy: {{ $job.concurrencyPolicy | default "Forbid" }}
  failedJobsHistoryLimit: {{ $job.failedJobsHistoryLimit | default 1 }}
  startingDeadlineSeconds: {{ $job.startingDeadlineSeconds | default nil }}
  successfulJobsHistoryLimit: {{ $job.successfulJobsHistoryLimit | default 3 }}
  suspend: {{ $job.suspend | default false }}
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            fullname: {{ template "myfullname" $root }}-{{ $serviceName }}-{{ $job.name }}
            app: {{ template "myname" $root }}
            release: {{ $root.Release.Name }}
            {{- if default $defaults.tier .tier }}
            tier: {{ default $defaults.tier .tier }}
            {{- end }}
            role: {{ $serviceName }}
            # TODO: access labels for cronjobs also
        spec:
          activeDeadlineSeconds: {{ $job.activeDeadlineSeconds | default nil }}
          restartPolicy: {{ $job.restartPolicy | default "Never" }}
          securityContext:
            {{- if coalesce $job.fsGroup .fsGroup | quote }} 
            fsGroup: {{ coalesce $job.fsGroup .fsGroup }}
            {{- end }}
          {{- if default $defaults.serviceAccountName $job.serviceAccountName }}
          serviceAccountName: {{ default $defaults.serviceAccountName $job.serviceAccountName }}
          {{- else }}
          serviceAccountName: {{ template "myfullname" $root }}
          {{- end }}
          automountServiceAccountToken: false
          {{- if .nodeSelector }}
          nodeSelector:
          {{- range $name, $value := .nodeSelector }}
            {{ $name }}: {{ $value | quote }}
          {{- end }}
          {{- else if $defaults.nodeSelector }}
          nodeSelector:
          {{- range $name, $value := $defaults.nodeSelector }}
            {{ $name }}: {{ $value | quote }}
          {{- end }}
          {{- end }}
          affinity:
            podAffinity:
              {{- if .placementSameAs }}
              requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                  - key: "release"
                    operator: In
                    values:
                    - {{ $root.Release.Name }}
                  - key: "role"
                    operator: In
                    values:
                    - {{ .placementSameAs }}
                topologyKey: "kubernetes.io/hostname"
              {{- end }}
              {{- if .placementPreferSameAs }}
              preferredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                  - key: "release"
                    operator: In
                    values:
                    - {{ $root.Release.Name }}
                  - key: "role"
                    operator: In
                    values:
                    - {{ .placementPreferSameAs }}
                topologyKey: "kubernetes.io/hostname"
              {{- end }}
          initContainers:
            {{- if and (.db) (eq $provider "gcp") }}
            {{- if .db.useProxy }}
            - name: cloud-sql-proxy
              restartPolicy: Always
              image: gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.15.1
              args:
                - --private-ip
                # - --auto-iam-authn
                - --quitquitquit
                - --structured-logs
                - --credentials-file=/secrets/cloudsql/{{ regexFind "[a-zA-Z0-9]*$" .db.proxySecret }}
                - --port={{ .db.port }}
                - {{ .db.instance }}
              securityContext:
                privileged: false
                allowPrivilegeEscalation: false
                runAsNonRoot: true
                seccompProfile:
                  type: RuntimeDefault
                capabilities:
                  drop: ["ALL"]          
              resources:
                requests:
                  memory: 50Mi
                  cpu: 10m
              volumeMounts:
                - name: cloudsql-instance-credentials
                  mountPath: /secrets/cloudsql
                  readOnly: true
            {{- end }}
            {{- end }}
          containers:
            - name: {{ template "myname" $root }}-{{ $serviceName }}-{{ $job.name }}
              {{- if .image }}
              image: {{ .image }}
              {{- else }}
              image: {{ $global.registry -}} / {{- $serviceName -}} : {{- $global.build.imageTag }}
              {{- end }}
              imagePullPolicy: {{ $global.imagePullPolicy | quote }}
              securityContext:
                {{- if coalesce $job.runAsUser .runAsUser | quote }}
                runAsUser: {{ coalesce $job.runAsUser .runAsUser }}
                {{- end }}
                {{- if coalesce $job.runAsGroup .runAsGroup | quote }}
                runAsGroup: {{ coalesce $job.runAsGroup .runAsGroup }}
                {{- end }}
                allowPrivilegeEscalation: false
                runAsNonRoot: true
                seccompProfile:
                  type: RuntimeDefault
                capabilities:
                  drop: ["ALL"]
              {{- if $job.shellCommand }}
              command:
                - sh
                - -c
                - >
                  {{ $job.shellCommand }};
                  {{- if and (.db) (eq $provider "gcp") }}
                  {{- if .db.useProxy }}
                  exit_code=$?;
                  if which curl > /dev/null; then curl -X POST localhost:9091/quitquitquit; else wget --post-data="" http://localhost:9091/quitquitquit -O /dev/null; fi;
                  exit $$exit_code;
                  {{- end }}
                  {{- end }}
              {{- end }}                  
              {{- if $job.command }}
              command:
                {{- range $job.command }}
                - {{ . }}
                {{- end }}
              {{- end }}
              {{- if $job.args }}
              args:
                {{- range $job.args }}
                - {{ . | quote }}
                {{- end }}
              {{- end }}
              {{- if $job.stdin }}
              stdin: {{ $job.stdin }}
              {{- end }}
              {{- if $job.tty }}
              tty: {{ $job.tty }}
              {{- end }}
              resources:
                requests:
                  cpu: {{ coalesce $job.cpuRequest .cpuRequest $defaults.cpuRequest }}
                  memory: {{ coalesce $job.memoryRequest .memoryRequest $defaults.memoryRequest }}
                limits:
                  cpu: {{ coalesce $job.cpuLimit .cpuLimit $defaults.cpuLimit }}
                  memory: {{ coalesce $job.memoryLimit .memoryLimit $defaults.memoryLimit }}
                  {{- if coalesce $job.gpuLimit .gpuLimit }}
                  nvidia.com/gpu: {{ coalesce $job.gpuLimit .gpuLimit }}
                  {{- end }}
              # TODO: resource requests and limits
              envFrom:
                - prefix: COMMON_
                  configMapRef:
                    name: {{ template "myfullname" $root }}-common
              env:
                {{- if and (.serviceAccount) (eq $provider "gcp") }}
                {{- if .serviceAccount.secret }}
                - name: GOOGLE_APPLICATION_CREDENTIALS
                  value: /serviceaccount/{{ regexFind "[a-zA-Z0-9]*$" .serviceAccount.secret }}
                {{- end }}
                {{- end }}
                {{- range $name, $value := $defaults.env }}
                - name: {{ $name }}
                  value: {{ $value | quote }}
                {{- end }}
                {{- range $name, $value := .env }}
                - name: {{ $name }}
                  value: {{ $value | quote }}
                {{- end }}
                {{- range $name, $value := $job.env }}
                - name: {{ $name }}
                  value: {{ $value | quote }}
                {{- end }}
                {{- range $name, $value := $defaults.secretEnv }}
                - name: {{ $name }}
                  valueFrom:
                    secretKeyRef:
                      name: {{ regexReplaceAll "\\.[.a-zA-Z0-9]*$" $value "" }}
                      key: {{ regexFind "\\.[.a-zA-Z0-9]*$" $value | substr 1 -1 }}
                {{- end }}
                {{- range $name, $value := .secretEnv }}
                - name: {{ $name }}
                  valueFrom:
                    secretKeyRef:
                      name: {{ regexReplaceAll "\\.[.a-zA-Z0-9]*$" $value "" }}
                      key: {{ regexFind "\\.[.a-zA-Z0-9]*$" $value | substr 1 -1 }}
                {{- end }}
                {{- range $name, $value := $job.secretEnv }}
                - name: {{ $name }}
                  valueFrom:
                    secretKeyRef:
                      name: {{ regexReplaceAll "\\.[.a-zA-Z0-9]*$" $value "" }}
                      key: {{ regexFind "\\.[.a-zA-Z0-9]*$" $value | substr 1 -1 }}
                {{- end }}
              volumeMounts:
              {{- range $name, $value := $defaults.secrets }}
                - name: default- {{- lower $name | replace "_" "-" }}
                  mountPath: /run/secrets/ {{- $name }}
                  subPath: {{ $name }}
                  readOnly: true
              {{- end }}
              {{- range $name, $value := .secrets }}
                - name: {{ lower $name | replace "_" "-" }}
                  mountPath: /run/secrets/ {{- $name }}
                  subPath: {{ $name }}
                  readOnly: true
              {{- end }}
              {{- range $name, $value := $job.secrets }}
                - name: {{ lower $name | replace "_" "-" }}
                  mountPath: /run/secrets/ {{- $name }}
                  subPath: {{ $name }}
                  readOnly: true
              {{- end }}
              {{- if and (.serviceAccount) (eq $provider "gcp") }}
              {{- if .serviceAccount.secret }}
                - name: serviceaccount
                  mountPath: /serviceaccount
                  readOnly: true
              {{- end }}
              {{- end }}
          volumes:
            {{- range $name, $value := $defaults.secrets }}
            - name: default- {{- lower $name | replace "_" "-" }}
              secret:
                secretName: {{ regexReplaceAll "\\.[.a-zA-Z0-9]*$" $value "" }}
                items:
                - key: {{ regexFind "\\.[.a-zA-Z0-9]*$" $value | substr 1 -1 }}
                  path: {{ $name }}
            {{- end }}
            {{- range $name, $value := .secrets }}
            - name: {{ lower $name | replace "_" "-" }}
              secret:
                secretName: {{ regexReplaceAll "\\.[.a-zA-Z0-9]*$" $value "" }}
                items:
                - key: {{ regexFind "\\.[.a-zA-Z0-9]*$" $value | substr 1 -1 }}
                  path: {{ $name }}
            {{- end }}
            {{- range $name, $value := $job.secrets }}
            - name: {{ lower $name | replace "_" "-" }}
              secret:
                secretName: {{ regexReplaceAll "\\.[.a-zA-Z0-9]*$" $value "" }}
                items:
                - key: {{ regexFind "\\.[.a-zA-Z0-9]*$" $value | substr 1 -1 }}
                  path: {{ $name }}
            {{- end }}
            {{- if and (.db) (eq $provider "gcp") }}
            {{- if .db.useProxy }}
            - name: cloudsql-instance-credentials
              secret:
                secretName: {{ regexReplaceAll "\\.[a-zA-Z0-9]*$" .db.proxySecret "" }}
            {{- end }}
            {{- end }}
            {{- if and (.serviceAccount) (eq $provider "gcp") }}
            {{- if .serviceAccount.secret }}
            - name: serviceaccount
              secret:
                secretName: {{ regexReplaceAll "\\.[a-zA-Z0-9]*$" .serviceAccount.secret "" }}
            {{- end }}
            {{- end }}
---
{{- end }}
{{- end }}

{{- end }}
{{- end }}
{{- end }}
