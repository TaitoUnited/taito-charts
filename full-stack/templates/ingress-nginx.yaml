{{- $root := . -}}
{{- $defaults := .Values.serviceDefaults -}}

{{- if contains "nginx" $root.Values.ingress.class }}
{{- if or (not (hasKey $root.Values.ingress "enabled")) ($root.Values.ingress.enabled) }}

# Alternate domain ingresses (redirect)
# TODO: add non-nginx support
{{- if contains "nginx" $root.Values.ingress.class }}
{{- range $domain := .Values.ingress.domains }}
{{- if $domain.altDomains }}

# TODO: temporary fix for Helm v2 backwards compatibility
# -> for Helm v3 was: if (get (first $domain.altDomains) "name")
{{- $altDomainSettings := dict "enabled" false -}}
{{- range $altDomain := $domain.altDomains }}
{{- if $altDomain.name }}
{{- $altDomainSettings := set $altDomainSettings "enabled" true -}}
{{- end }}
{{- end }}

{{- if $altDomainSettings.enabled }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ template "myfullname" $root }}-ingress-alt
  annotations:
    {{- if not $root.Values.ingress.tls }}
    nginx.ingress.kubernetes.io/server-snippet: |
      if ($request_uri !~ ^/\.well-known/.*$) {
        return 301 http://{{ $domain.name }}$request_uri;
      }
    {{- end }}
    {{- if $root.Values.ingress.tls }}
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/server-snippet: |
      if ($request_uri !~ ^/\.well-known/.*$) {
        return 301 https://{{ $domain.name }}$request_uri;
      }
    {{- end }}
    {{- if $domain.annotations }}
    {{- range $annotationName, $annotationValue := $domain.annotations }}
    {{ $annotationName }}: {{- $annotationValue | toYaml | nindent 4 }}
    {{- end }}
    {{- end }}
spec:
  {{- if $root.Values.ingress.class }}
  ingressClassName: {{ $root.Values.ingress.class | quote }}
  {{- end }}
  {{- if $root.Values.ingress.tls }}
  tls:
  - hosts:
    {{- range $altDomain := $domain.altDomains }}
    - {{ $altDomain.name }}
    {{- end }}
    secretName: {{ template "myfullname" $root }}-ssl
  {{- end }}
  rules:
    {{- range $altDomain := $domain.altDomains }}
    - host: {{ $altDomain.name }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              # TODO: Remove hardcoded default backend name
              service:
                name: common-nginx-nginx-ingress-default-backend
                port:
                  number: 80
    {{- end }}
---
{{- end }}
{{- end }}
{{- end }}
{{- end }}

# Master ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ template "myfullname" . }}-ingress
  annotations:
    {{- if .Values.ingress.tls }}
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    {{- end }}
    {{- if .Values.ingress.annotations }}
    {{- range $annotationName, $annotationValue := .Values.ingress.annotations }}
    {{ $annotationName }}: {{- $annotationValue | toYaml | nindent 4 }}
    {{- end }}
    {{- end }}
    nginx.ingress.kubernetes.io/server-snippet: |
      location ~ /\.(?!well-known).* {
        deny all;
        access_log off;
        log_not_found off;
        return 404;
      }
    # TODO: make forbidden paths configurable
    nginx.ingress.kubernetes.io/server-snippet: |
      location ~* ^/xmlrpc.php$ {
        return 403;
      }
spec:
  {{- if .Values.ingress.class }}
  ingressClassName: {{ .Values.ingress.class | quote }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
  {{- range $domain := .Values.ingress.domains }}
  - hosts:
    - {{ $domain.name }}
    {{- if not $domain.certSecret }}
    secretName: {{ template "myfullname" $root }}-ssl
    {{- end }}
    {{- if $domain.certSecret }}
    secretName: {{ $domain.certSecret }}
    {{- end }}
  {{- end }}
  {{- end }}
  rules:
    {{- range $domain := .Values.ingress.domains }}
    - host: {{ $domain.name }}
      # Include service paths on master ingress for non-nginx ingresses
      # -> subpath specific settings not supported for non-nginx ingresses
      {{- if not (contains "nginx" $root.Values.ingress.class) }}
      http:
        paths:
          {{- range $serviceName, $service := $root.Values.services }}
          {{- if or (not (hasKey $service "enabled")) ($service.enabled) }}
          {{- range $path := $service.paths }}
          {{- with $path }}
          - path: {{ $path.path }}
            pathType: Prefix
            backend:
              service:
                name: {{ template "myfullname" $root }}-{{ $serviceName }}
                port:
                  number: {{ coalesce $path.port $service.port $defaults.port }}
          {{- end }}
          {{- end }}
          {{- end }}
          {{- end }}
      {{- end }}

    {{- end }}
---

{{- if contains "nginx" $root.Values.ingress.class }}

# Service ingresses
{{- range $serviceName, $service := .Values.services }}
{{- if or (not (hasKey $service "enabled")) ($service.enabled) }}


# Minion ingress for each service path
{{- range $path := $service.paths }}
{{- with $path }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ template "myfullname" $root }}-ingress-{{ $serviceName }}{{ .path | trimSuffix "/" | default "-root" | replace "/" "-" }}
  annotations:
    nginx.ingress.kubernetes.io/server-snippet: |
      location ~ /\.(?!well-known).* {
        deny all;
        access_log off;
        log_not_found off;
        return 404;
      }
    # TODO: make forbidden paths configurable
    nginx.ingress.kubernetes.io/server-snippet: |
      location ~* ^/xmlrpc.php$ {
        return 403;
      }
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "Referrer-Policy: strict-origin-when-cross-origin";
      {{- if not .defaultCSPDisabled }}
      more_set_headers "Content-Security-Policy: frame-ancestors 'none'";
      {{- end }}
    {{- if hasKey . "basicAuthEnabled" | ternary .basicAuthEnabled $defaults.basicAuthEnabled }}
    nginx.ingress.kubernetes.io/auth-type: "basic"
    nginx.ingress.kubernetes.io/auth-realm: {{ template "myname" $root }}
    nginx.ingress.kubernetes.io/auth-secret: {{ .basicAuthHtpasswdSecret | default $defaults.basicAuthHtpasswdSecret }}
    {{- end }}
    {{- if or .rewriteTargetDisabled (eq .path "/") }}
    {{- else }}
    nginx.ingress.kubernetes.io/rewrite-target: {{ default "/" .rewriteTarget | trimSuffix "/" }}/$2
    {{- end }}
    {{- if .clientMaxBodySize | default $defaults.clientMaxBodySize }}
    nginx.ingress.kubernetes.io/proxy-body-size: {{ .clientMaxBodySize | default $defaults.clientMaxBodySize | quote }}
    {{- end }}
    {{- if .bufferSize | default $defaults.bufferSize }}
    nginx.ingress.kubernetes.io/proxy-buffer-size: {{ .bufferSize | default $defaults.bufferSize | quote }}
    {{- end }}
    {{- if .requestBuffering | default $defaults.requestBuffering }}
    nginx.ingress.kubernetes.io/proxy-request-buffering: {{ .requestBuffering | default $defaults.requestBuffering | quote }}
    {{- end }}
    {{- if .connectTimeout | default $defaults.connectTimeout }}
    nginx.ingress.kubernetes.io/proxy-connect-timeout: {{ .connectTimeout | default $defaults.connectTimeout | quote }}
    {{- end }}
    {{- if .sendTimeout | default $defaults.sendTimeout }}
    nginx.ingress.kubernetes.io/proxy-send-timeout: {{ .sendTimeout | default $defaults.sendTimeout | quote }}
    {{- end }}
    {{- if .readTimeout | default $defaults.readTimeout }}
    nginx.ingress.kubernetes.io/proxy-read-timeout: {{ .readTimeout | default $defaults.readTimeout | quote }}
    {{- end }}
    {{- if .nextUpstreamTimeout | default $defaults.nextUpstreamTimeout }}
    nginx.ingress.kubernetes.io/proxy-next-upstream-timeout: {{ .nextUpstreamTimeout | default $defaults.nextUpstreamTimeout | quote }}
    {{- end }}
    {{- if .limitConnections | default $defaults.limitConnections }}
    nginx.ingress.kubernetes.io/limit-connections: {{ .limitConnections | default $defaults.limitConnections | quote }}
    {{- end }}
    {{- if .limitRpm | default $defaults.limitRpm }}
    nginx.ingress.kubernetes.io/limit-rpm: {{ .limitRpm | default $defaults.limitRpm | quote }}
    {{- end }}
    {{- if .limitRate | default $defaults.limitRate }}
    nginx.ingress.kubernetes.io/limit-rate: {{ .limitRate | default $defaults.limitRate | quote }}
    {{- end }}
    {{- if .limitRateAfter | default $defaults.limitRateAfter }}
    nginx.ingress.kubernetes.io/limit-rate-after: {{ .limitRateAfter | default $defaults.limitRateAfter | quote }}
    {{- end }}
    {{- if coalesce .limitRate $defaults.limitRate .limitRateAfter $defaults.limitRateAfter }}
    nginx.ingress.kubernetes.io/proxy-buffering: "on"
    {{- end }}
    {{- $limitWhitelistCidrs := .limitWhitelistCidrs | default $defaults.limitWhitelistCidrs }}
    {{- if $limitWhitelistCidrs }}
    nginx.ingress.kubernetes.io/limit-whitelist: |
      {{ range $limitWhitelistCidrs }}{{ . }},{{ end }}127.0.0.1/32
    {{- end }}
    {{- if .modsecurityEnabled | default $defaults.modsecurityEnabled }}
    nginx.ingress.kubernetes.io/enable-modsecurity: "true"
    nginx.ingress.kubernetes.io/modsecurity-transaction-id: "$request_id"
    {{- if .modsecurityRules | default $defaults.modsecurityRules }}
    nginx.ingress.kubernetes.io/enable-owasp-core-rules: "false"
    nginx.ingress.kubernetes.io/modsecurity-snippet: {{ .modsecurityRules | default $defaults.modsecurityRules }}
    {{- else }}
    nginx.ingress.kubernetes.io/enable-owasp-core-rules: "true"
    {{- end }}
    {{- else }}
    nginx.ingress.kubernetes.io/enable-modsecurity: "false"
    nginx.ingress.kubernetes.io/enable-owasp-core-rules: "false"
    {{- end }}
    {{- $allowedCountries := .allowedCountries | default $defaults.allowedCountries }}
    {{- $blockedCountries := .blockedCountries | default $defaults.blockedCountries }}
    {{- if $allowedCountries }}
    nginx.ingress.kubernetes.io/configuration-snippet: |
      if ($geoip2_city_country_code !~ ^({{ range $allowedCountries }}{{ . }}|{{ end }}dummy)$) {
        return 444;
      }
    {{- else if $blockedCountries }}
    nginx.ingress.kubernetes.io/configuration-snippet: |
      if ($geoip2_city_country_code ~ ^({{ range $blockedCountries }}{{ . }}|{{ end }}dummy)$) {
        return 444;
      }
    {{- end }}
    {{- $cidrs := .allowedCidrs | default $defaults.allowedCidrs }}
    {{- if $cidrs }}
    nginx.ingress.kubernetes.io/whitelist-source-range: |
      {{ range $i, $cidr := $cidrs }}{{ $cidr }},{{ end }}127.0.0.1/32
    {{- end }}
    {{- if .annotations }}
    {{- range $annotationName, $annotationValue := .annotations }}
    {{ $annotationName }}: {{- $annotationValue | toYaml | nindent 4 }}
    {{- end }}
    {{- end }}
spec:
  {{- if $root.Values.ingress.class }}
  ingressClassName: {{ $root.Values.ingress.class | quote }}
  {{- end }}
  rules:
    {{- range $domain := $root.Values.ingress.domains }}
    - host: {{ $domain.name }}
      http:
        paths:
          {{- if or $path.rewriteTargetDisabled (eq $path.path "/") }}
          - path: {{ $path.path }}
            pathType: Prefix
          {{- else }}
          - path: {{ $path.path }}{{ hasSuffix "/" $path.path | ternary "()(.*)" "(/|$)(.*)" }}
            pathType: Prefix
          {{- end }}
            backend:
              service:
                name: {{ template "myfullname" $root }}-{{ $serviceName }}
                port:
                  number: {{ coalesce $path.port $service.port $defaults.port }}
    {{- end }}
---
{{- end }}
{{- end }}


# Minion ingress for each service sidecar path
# TODO: duplicate code with 'minion ingress for each service path'
{{- if $service.sidecar }}
{{- if $service.sidecar.enabled }}
{{- range $path := $service.sidecar.paths }}
{{- with $path }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ template "myfullname" $root }}-ingress-{{ $serviceName }}-sidecar{{ .path | trimSuffix "/" | default "-root" | replace "/" "-" }}
  annotations:
    nginx.ingress.kubernetes.io/server-snippet: |
      location ~ /\.(?!well-known).* {
        deny all;
        access_log off;
        log_not_found off;
        return 404;
      }
    # TODO: make forbidden paths configurable
    nginx.ingress.kubernetes.io/server-snippet: |
      location ~* ^/xmlrpc.php$ {
        return 403;
      }
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "Referrer-Policy: strict-origin-when-cross-origin";
      {{- if not .defaultCSPDisabled }}
      more_set_headers "Content-Security-Policy: frame-ancestors 'none'";
      {{- end }}
    {{- if hasKey . "basicAuthEnabled" | ternary .basicAuthEnabled $defaults.basicAuthEnabled }}
    nginx.ingress.kubernetes.io/auth-type: "basic"
    nginx.ingress.kubernetes.io/auth-realm: {{ template "myname" $root }}
    nginx.ingress.kubernetes.io/auth-secret: {{ .basicAuthHtpasswdSecret | default $defaults.basicAuthHtpasswdSecret }}
    {{- end }}
    {{- if or .rewriteTargetDisabled (eq .path "/") }}
    {{- else }}
    nginx.ingress.kubernetes.io/rewrite-target: {{ default "/" .rewriteTarget | trimSuffix "/" }}/$2
    {{- end }}
    {{- if .clientMaxBodySize | default $defaults.clientMaxBodySize }}
    nginx.ingress.kubernetes.io/proxy-body-size: {{ .clientMaxBodySize | default $defaults.clientMaxBodySize | quote }}
    {{- end }}
    {{- if .bufferSize | default $defaults.bufferSize }}
    nginx.ingress.kubernetes.io/proxy-buffer-size: {{ .bufferSize | default $defaults.bufferSize | quote }}
    {{- end }}
    {{- if .requestBuffering | default $defaults.requestBuffering }}
    nginx.ingress.kubernetes.io/proxy-request-buffering: {{ .requestBuffering | default $defaults.requestBuffering | quote }}
    {{- end }}
    {{- if .connectTimeout | default $defaults.connectTimeout }}
    nginx.ingress.kubernetes.io/proxy-connect-timeout: {{ .connectTimeout | default $defaults.connectTimeout | quote }}
    {{- end }}
    {{- if .sendTimeout | default $defaults.sendTimeout }}
    nginx.ingress.kubernetes.io/proxy-send-timeout: {{ .sendTimeout | default $defaults.sendTimeout | quote }}
    {{- end }}
    {{- if .readTimeout | default $defaults.readTimeout }}
    nginx.ingress.kubernetes.io/proxy-read-timeout: {{ .readTimeout | default $defaults.readTimeout | quote }}
    {{- end }}
    {{- if .nextUpstreamTimeout | default $defaults.nextUpstreamTimeout }}
    nginx.ingress.kubernetes.io/proxy-next-upstream-timeout: {{ .nextUpstreamTimeout | default $defaults.nextUpstreamTimeout | quote }}
    {{- end }}
    {{- if .limitConnections | default $defaults.limitConnections }}
    nginx.ingress.kubernetes.io/limit-connections: {{ .limitConnections | default $defaults.limitConnections | quote }}
    {{- end }}
    {{- if .limitRpm | default $defaults.limitRpm }}
    nginx.ingress.kubernetes.io/limit-rpm: {{ .limitRpm | default $defaults.limitRpm | quote }}
    {{- end }}
    {{- if .limitRate | default $defaults.limitRate }}
    nginx.ingress.kubernetes.io/limit-rate: {{ .limitRate | default $defaults.limitRate | quote }}
    {{- end }}
    {{- if .limitRateAfter | default $defaults.limitRateAfter }}
    nginx.ingress.kubernetes.io/limit-rate-after: {{ .limitRateAfter | default $defaults.limitRateAfter | quote }}
    {{- end }}
    {{- if coalesce .limitRate $defaults.limitRate .limitRateAfter $defaults.limitRateAfter }}
    nginx.ingress.kubernetes.io/proxy-buffering: "on"
    {{- end }}
    {{- $limitWhitelistCidrs := .limitWhitelistCidrs | default $defaults.limitWhitelistCidrs }}
    {{- if $limitWhitelistCidrs }}
    nginx.ingress.kubernetes.io/limit-whitelist: |
      {{ range $limitWhitelistCidrs }}{{ . }},{{ end }}127.0.0.1/32
    {{- end }}
    {{- if .modsecurityEnabled | default $defaults.modsecurityEnabled }}
    nginx.ingress.kubernetes.io/enable-modsecurity: "true"
    nginx.ingress.kubernetes.io/modsecurity-transaction-id: "$request_id"
    {{- if .modsecurityRules | default $defaults.modsecurityRules }}
    nginx.ingress.kubernetes.io/enable-owasp-core-rules: "false"
    nginx.ingress.kubernetes.io/modsecurity-snippet: {{ .modsecurityRules | default $defaults.modsecurityRules }}
    {{- else }}
    nginx.ingress.kubernetes.io/enable-owasp-core-rules: "true"
    {{- end }}
    {{- else }}
    nginx.ingress.kubernetes.io/enable-modsecurity: "false"
    nginx.ingress.kubernetes.io/enable-owasp-core-rules: "false"
    {{- end }}
    {{- $allowedCountries := .allowedCountries | default $defaults.allowedCountries }}
    {{- $blockedCountries := .blockedCountries | default $defaults.blockedCountries }}
    {{- if $allowedCountries }}
    nginx.ingress.kubernetes.io/configuration-snippet: |
      if ($geoip2_city_country_code !~ ^({{ range $allowedCountries }}{{ . }}|{{ end }}dummy)$) {
        return 444;
      }
    {{- else if $blockedCountries }}
    nginx.ingress.kubernetes.io/configuration-snippet: |
      if ($geoip2_city_country_code ~ ^({{ range $blockedCountries }}{{ . }}|{{ end }}dummy)$) {
        return 444;
      }
    {{- end }}
    {{- $cidrs := .allowedCidrs | default $defaults.allowedCidrs }}
    {{- if $cidrs }}
    nginx.ingress.kubernetes.io/whitelist-source-range: |
      {{ range $i, $cidr := $cidrs }}{{ $cidr }},{{ end }}127.0.0.1/32
    {{- end }}
    {{- if .annotations }}
    {{- range $annotationName, $annotationValue := .annotations }}
    {{ $annotationName }}: {{- toYaml $annotationValue | nindent 4 }}
    {{- end }}
    {{- end }}
spec:
  {{- if $root.Values.ingress.class }}
  ingressClassName: {{ $root.Values.ingress.class | quote }}
  {{- end }}
  rules:
    {{- range $domain := $root.Values.ingress.domains }}
    - host: {{ $domain.name }}
      http:
        paths:
          {{- if or $path.rewriteTargetDisabled (eq $path.path "/") }}
          - path: {{ $path.path }}
            pathType: Prefix
          {{- else }}
          - path: {{ $path.path }}{{ hasSuffix "/" $path.path | ternary "()(.*)" "(/|$)(.*)" }}
            pathType: Prefix
          {{- end }}
            backend:
              service:
                name: {{ template "myfullname" $root }}-{{ $serviceName }}
                port:
                  number: {{ $service.sidecar.port | default $defaults.port }}
    {{- end }}
---
{{- end }}
{{- end }}
{{- end }}
{{- end }}


{{- end }}

{{- end }}
{{- end }}

{{- end }}
{{- end }}
