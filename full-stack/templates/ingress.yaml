{{- $root := . -}}
{{- $defaults := .Values.serviceDefaults -}}
{{- $annoPrefix := .Values.ingress.oldRewritePolicy | ternary "" "nginx." -}}

{{- if or (not (hasKey $root.Values.ingress "enabled")) ($root.Values.ingress.enabled) }}
{{- if not (contains "openshift" $root.Values.ingress.class) }}

# Alternate domain ingresses (redirect)
# TODO: add non-nginx support
{{- if contains "nginx" $root.Values.ingress.class }}
{{- range $domain := .Values.ingress.domains }}
{{- if $domain.altDomains }}
{{- if (get (first $domain.altDomains) "name") }}
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ template "fullname" $root }}-ingress-alt
  labels:
    app: {{ template "name" $root }}
    chart: {{ $root.Chart.Name }}-{{ $root.Chart.Version | replace "+" "_" }}
    release: {{ $root.Release.Name }}
    heritage: {{ $root.Release.Service }}
  annotations:
    {{- if $root.Values.ingress.class }}
    kubernetes.io/ingress.class: {{ $root.Values.ingress.class | quote }}
    {{- end }}
    {{- if not $root.Values.ingress.tls }}
    {{ $annoPrefix }}ingress.kubernetes.io/permanent-redirect: http://{{ $domain.name }}
    {{- end }}
    {{- if $root.Values.ingress.tls }}
    kubernetes.io/tls-acme: "true"
    {{ $annoPrefix }}ingress.kubernetes.io/ssl-redirect: "false"
    {{ $annoPrefix }}ingress.kubernetes.io/server-snippet: |
      return 301 https://{{ $domain.name }}$request_uri;
    {{- end }}
    {{- if $domain.annotations }}
    {{- range $annotationName, $annotationValue := $domain.annotations }}
    {{ $annotationName }}: {{ $annotationValue }}
    {{- end }}
    {{- end }}
spec:
  {{- if $root.Values.ingress.tls }}
  tls:
  - hosts:
    {{- range $altDomain := $domain.altDomains }}
    - {{ $altDomain.name }}
    {{- end }}
    secretName: {{ template "fullname" $root }}-ssl-alt
  {{- end }}
  rules:
    {{- range $altDomain := $domain.altDomains }}
    - host: {{ $altDomain.name }}
      http:
        paths:
          - path: /
            backend:
              # TODO: Remove hardcoded default backend name
              serviceName: common-nginx-nginx-ingress-default-backend
              servicePort: 80
    {{- end }}
---
{{- end }}
{{- end }}
{{- end }}
{{- end }}

# Master ingress
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ template "fullname" . }}-ingress
  labels:
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  annotations:
    {{- if contains "nginx" $root.Values.ingress.class }}
    nginx.org/mergeable-ingress-type: "master"
    {{- end }}
    {{- if .Values.ingress.class }}
    kubernetes.io/ingress.class: {{ .Values.ingress.class | quote }}
    {{- end }}
    {{- if .Values.ingress.tls }}
    kubernetes.io/tls-acme: "true"
    {{ $annoPrefix }}ingress.kubernetes.io/ssl-redirect: "true"
    {{ $annoPrefix }}ingress.kubernetes.io/force-ssl-redirect: "true"
    {{- end }}
    {{- if .Values.ingress.annotations }}
    {{- range $annotationName, $annotationValue := .Values.ingress.annotations }}
    {{ $annotationName }}: {{ $annotationValue }}
    {{- end }}
    {{- end }}
spec:
  {{- if .Values.ingress.tls }}
  tls:
  {{- range $domain := .Values.ingress.domains }}
  - hosts:
    - {{ $domain.name }}
    {{- if not $domain.certSecret }}
    secretName: {{ template "fullname" $root }}-ssl
    {{- end }}
    {{- if $domain.certSecret }}
    secretName: {{ $domain.certSecret }}
    {{- end }}
  {{- end }}
  {{- end }}
  rules:
    {{- range $domain := .Values.ingress.domains }}
    - host: {{ $domain.name }}
      # Include service paths on master ingress for non-nginx ingresses
      # -> subpath specific settings not supported for non-nginx ingresses
      {{- if not (contains "nginx" $root.Values.ingress.class) }}
      http:
        paths:
          {{- range $serviceName, $service := $root.Values.services }}
          {{- if or (not (hasKey $service "enabled")) ($service.enabled) }}
          {{- range $path := $service.paths }}
          {{- with $path }}
          - path: {{ default "/" $path.path }}
            backend:
              serviceName: {{ template "fullname" $root }}-{{ $serviceName }}
              servicePort: {{ $service.port | default $defaults.port }}
          {{- end }}
          {{- end }}
          {{- end }}
          {{- end }}
      {{- end }}

    {{- end }}
---

{{- if contains "nginx" $root.Values.ingress.class }}

# Service ingresses
{{- range $serviceName, $service := .Values.services }}
{{- if or (not (hasKey $service "enabled")) ($service.enabled) }}


# Minion ingress for each service path
{{- range $path := $service.paths }}
{{- with $path }}
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ template "fullname" $root }}-ingress-{{ $serviceName }}{{ .path | default "-root" | replace "/" "-" }}
  labels:
    app: {{ template "name" $root }}
    chart: {{ $root.Chart.Name }}-{{ $root.Chart.Version | replace "+" "_" }}
    release: {{ $root.Release.Name }}
    heritage: {{ $root.Release.Service }}
  annotations:
    nginx.org/mergeable-ingress-type: "minion"
    {{- if $root.Values.ingress.class }}
    kubernetes.io/ingress.class: {{ $root.Values.ingress.class | quote }}
    {{- end }}
    {{- if hasKey . "basicAuthEnabled" | ternary .basicAuthEnabled $defaults.basicAuthEnabled }}
    {{ $annoPrefix }}ingress.kubernetes.io/auth-type: "basic"
    {{ $annoPrefix }}ingress.kubernetes.io/auth-realm: {{ template "name" $root }}
    {{ $annoPrefix }}ingress.kubernetes.io/auth-secret: {{ .basicAuthHtpasswdSecret | default $defaults.basicAuthHtpasswdSecret }}
    {{- end }}
    {{- if not .rewriteTargetDisabled }}
    # TODO: remove oldRewritePolicy --> {{ $annoPrefix }}ingress.kubernetes.io/rewrite-target: {{ default "/$1" .rewriteTarget }}
    ingress.kubernetes.io/rewrite-target: {{ default ($root.Values.ingress.oldRewritePolicy | ternary "/" "/$1") .rewriteTarget }}
    {{- end }}
    {{- if .clientMaxBodySize | default $defaults.clientMaxBodySize }}
    {{ $annoPrefix }}ingress.kubernetes.io/proxy-body-size: {{ .clientMaxBodySize | default $defaults.clientMaxBodySize | quote }}
    {{- end }}
    {{- if .bufferSize | default $defaults.bufferSize }}
    {{ $annoPrefix }}ingress.kubernetes.io/proxy-buffer-size: {{ .bufferSize | default $defaults.bufferSize | quote }}
    {{- end }}
    {{- if .requestBuffering | default $defaults.requestBuffering }}
    {{ $annoPrefix }}ingress.kubernetes.io/proxy-request-buffering: {{ .requestBuffering | default $defaults.requestBuffering | quote }}
    {{- end }}
    {{- if .connectTimeout | default $defaults.connectTimeout }}
    {{ $annoPrefix }}ingress.kubernetes.io/proxy-connect-timeout: {{ .connectTimeout | default $defaults.connectTimeout | quote }}
    {{- end }}
    {{- if .sendTimeout | default $defaults.sendTimeout }}
    {{ $annoPrefix }}ingress.kubernetes.io/proxy-send-timeout: {{ .sendTimeout | default $defaults.sendTimeout | quote }}
    {{- end }}
    {{- if .readTimeout | default $defaults.readTimeout }}
    {{ $annoPrefix }}ingress.kubernetes.io/proxy-read-timeout: {{ .readTimeout | default $defaults.readTimeout | quote }}
    {{- end }}
    {{- if .nextUpstreamTimeout | default $defaults.nextUpstreamTimeout }}
    {{ $annoPrefix }}ingress.kubernetes.io/proxy-next-upstream-timeout: {{ .nextUpstreamTimeout | default $defaults.nextUpstreamTimeout | quote }}
    {{- end }}
    {{- if .limitRate | default $defaults.limitRate }}
    {{ $annoPrefix }}ingress.kubernetes.io/limit-rate: {{ .limitRate | default $defaults.limitRate | quote }}
    {{- end }}
    {{- if .limitRateAfter | default $defaults.limitRateAfter }}
    {{ $annoPrefix }}ingress.kubernetes.io/limit-rate-after: {{ .limitRateAfter | default $defaults.limitRateAfter | quote }}
    {{- end }}
    {{- if .annotations }}
    {{- range $annotationName, $annotationValue := .annotations }}
    {{ $annotationName }}: {{ $annotationValue }}
    {{- end }}
    {{- end }}
spec:
  rules:
    {{- range $domain := $root.Values.ingress.domains }}
    - host: {{ $domain.name }}
      http:
        paths:
          {{- if or .rewriteTargetDisabled .rewriteTarget }}
          - path: {{ $path.path }}
          {{- else }}
          # TODO: remove oldRewritePolicy --> - path: {{ $path.path }}{{ "/?(.*)" }}
          - path: {{ $path.path }}{{ $root.Values.ingress.oldRewritePolicy | ternary "" "/?(.*)" }}
          {{- end }}
            backend:
              serviceName: {{ template "fullname" $root }}-{{ $serviceName }}
              servicePort: {{ $service.port | default $defaults.port }}
    {{- end }}
---
{{- end }}
{{- end }}


# Minion ingress for each service sidecar path
# TODO: duplicate code with 'minion ingress for each service path'
{{- if $service.sidecar }}
{{- if $service.sidecar.enabled }}
{{- range $path := $service.sidecar.paths }}
{{- with $path }}
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ template "fullname" $root }}-ingress-{{ $serviceName }}-sidecar{{ .path | default "-root" | replace "/" "-" }}
  labels:
    app: {{ template "name" $root }}
    chart: {{ $root.Chart.Name }}-{{ $root.Chart.Version | replace "+" "_" }}
    release: {{ $root.Release.Name }}
    heritage: {{ $root.Release.Service }}
  annotations:
    nginx.org/mergeable-ingress-type: "minion"
    {{- if $root.Values.ingress.class }}
    kubernetes.io/ingress.class: {{ $root.Values.ingress.class | quote }}
    {{- end }}
    {{- if hasKey . "basicAuthEnabled" | ternary .basicAuthEnabled $defaults.basicAuthEnabled }}
    {{ $annoPrefix }}ingress.kubernetes.io/auth-type: "basic"
    {{ $annoPrefix }}ingress.kubernetes.io/auth-realm: {{ template "name" $root }}
    {{ $annoPrefix }}ingress.kubernetes.io/auth-secret: {{ .basicAuthHtpasswdSecret | default $defaults.basicAuthHtpasswdSecret }}
    {{- end }}
    {{- if not .rewriteTargetDisabled }}
    # TODO: remove oldRewritePolicy --> {{ $annoPrefix }}ingress.kubernetes.io/rewrite-target: {{ default "/$1" .rewriteTarget }}
    ingress.kubernetes.io/rewrite-target: {{ default ($root.Values.ingress.oldRewritePolicy | ternary "/" "/$1") .rewriteTarget }}
    {{- end }}
    {{- if .clientMaxBodySize | default $defaults.clientMaxBodySize }}
    {{ $annoPrefix }}ingress.kubernetes.io/proxy-body-size: {{ .clientMaxBodySize | default $defaults.clientMaxBodySize | quote }}
    {{- end }}
    {{- if .bufferSize | default $defaults.bufferSize }}
    {{ $annoPrefix }}ingress.kubernetes.io/proxy-buffer-size: {{ .bufferSize | default $defaults.bufferSize | quote }}
    {{- end }}
    {{- if .requestBuffering | default $defaults.requestBuffering }}
    {{ $annoPrefix }}ingress.kubernetes.io/proxy-request-buffering: {{ .requestBuffering | default $defaults.requestBuffering | quote }}
    {{- end }}
    {{- if .connectTimeout | default $defaults.connectTimeout }}
    {{ $annoPrefix }}ingress.kubernetes.io/proxy-connect-timeout: {{ .connectTimeout | default $defaults.connectTimeout | quote }}
    {{- end }}
    {{- if .sendTimeout | default $defaults.sendTimeout }}
    {{ $annoPrefix }}ingress.kubernetes.io/proxy-send-timeout: {{ .sendTimeout | default $defaults.sendTimeout | quote }}
    {{- end }}
    {{- if .readTimeout | default $defaults.readTimeout }}
    {{ $annoPrefix }}ingress.kubernetes.io/proxy-read-timeout: {{ .readTimeout | default $defaults.readTimeout | quote }}
    {{- end }}
    {{- if .nextUpstreamTimeout | default $defaults.nextUpstreamTimeout }}
    {{ $annoPrefix }}ingress.kubernetes.io/proxy-next-upstream-timeout: {{ .nextUpstreamTimeout | default $defaults.nextUpstreamTimeout | quote }}
    {{- end }}
    {{- if .limitConnections | default $defaults.limitConnections }}
    {{ $annoPrefix }}ingress.kubernetes.io/limit-connections: {{ .limitConnections | default $defaults.limitConnections | quote }}
    {{- end }}
    {{- if .limitRpm | default $defaults.limitRpm }}
    {{ $annoPrefix }}ingress.kubernetes.io/limit-rpm: {{ .limitRpm | default $defaults.limitRpm | quote }}
    {{- end }}
    {{- if .limitRate | default $defaults.limitRate }}
    {{ $annoPrefix }}ingress.kubernetes.io/limit-rate: {{ .limitRate | default $defaults.limitRate | quote }}
    {{- end }}
    {{- if .limitRateAfter | default $defaults.limitRateAfter }}
    {{ $annoPrefix }}ingress.kubernetes.io/limit-rate-after: {{ .limitRateAfter | default $defaults.limitRateAfter | quote }}
    {{- end }}
    {{- if .limitWhitelistCidrs | default $defaults.limitWhitelistCidrs }}
    {{ $annoPrefix }}ingress.kubernetes.io/limit-whitelist: |
      {{- range .limitWhitelistCidrs | default $defaults.limitWhitelistCidrs }}{{ . }},{{ end }}
    {{- end }}
    {{- if .modsecurityEnabled | default $defaults.modsecurityEnabled }}
    {{ $annoPrefix }}ingress.kubernetes.io/enable-modsecurity: "true"
    {{ $annoPrefix }}ingress.kubernetes.io/modsecurity-transaction-id: "$request_id"
    {{- if .modsecurityRules | default $defaults.modsecurityRules }}
    {{ $annoPrefix }}ingress.kubernetes.io/enable-owasp-core-rules: "false"
    {{ $annoPrefix }}ingress.kubernetes.io/modsecurity-snippet: {{ .modsecurityRules | default $defaults.modsecurityRules }}
    {{- else }}
    {{ $annoPrefix }}ingress.kubernetes.io/enable-owasp-core-rules: "true"
    {{- end }}
    {{- else }}
    {{ $annoPrefix }}ingress.kubernetes.io/enable-modsecurity: "false"
    {{ $annoPrefix }}ingress.kubernetes.io/enable-owasp-core-rules: "false"
    {{- end }}
    {{- if .allowedCountries | default $defaults.allowedCountries }}
    {{ $annoPrefix }}ingress.kubernetes.io/server-snippet: |
      map $geoip2_city_country_code $allowed_country {
        default no;
        {{- range .allowedCountries | default $defaults.allowedCountries }}
        {{ . }} yes;
        {{- end }}
      }
    {{ $annoPrefix }}ingress.kubernetes.io/configuration-snippet: |
      if ($allowed_country = no) {
        return 444;
      }
    {{- else if .blockedCountries | default $defaults.blockedCountries }}
    {{ $annoPrefix }}ingress.kubernetes.io/server-snippet: |
      map $geoip2_city_country_code $blocked_country {
        default yes;
        {{- range .blockedCountries | default $defaults.blockedCountries }}
        {{ . }} no;
        {{- end }}
      }
    {{ $annoPrefix }}ingress.kubernetes.io/configuration-snippet: |
      if ($blocked_country) {
        return 444;
      }
    {{- end }}
    {{- if .allowedCidrs | default $defaults.allowedCidrs }}
    {{ $annoPrefix }}ingress.kubernetes.io/whitelist-source-range: |
      {{- range .allowedCidrs | default $defaults.allowedCidrs }}{{ . }},{{ end }}
    {{- end }}
    {{- if .annotations }}
    {{- range $annotationName, $annotationValue := .annotations }}
    {{ $annotationName }}: {{ $annotationValue }}
    {{- end }}
    {{- end }}
spec:
  rules:
    {{- range $domain := $root.Values.ingress.domains }}
    - host: {{ $domain.name }}
      http:
        paths:
          {{- if or .rewriteTargetDisabled .rewriteTarget }}
          - path: {{ $path.path }}
          {{- else }}
          # TODO: remove oldRewritePolicy --> - path: {{ $path.path }}{{ "/?(.*)" }}
          - path: {{ $path.path }}{{ $root.Values.ingress.oldRewritePolicy | ternary "" "/?(.*)" }}
          {{- end }}
            backend:
              serviceName: {{ template "fullname" $root }}-{{ $serviceName }}
              servicePort: {{ $service.sidecar.port | default $defaults.port }}
    {{- end }}
---
{{- end }}
{{- end }}
{{- end }}
{{- end }}


{{- end }}

{{- end }}
{{- end }}

{{- end }}
{{- end }}
