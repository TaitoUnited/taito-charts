{{- $root := . -}}
{{- $defaults := .Values.serviceDefaults -}}

{{- range $serviceName, $service := .Values.services }}
{{- with $service }}
{{- if or (not (hasKey . "enabled")) (.enabled) }}
{{- if or (not (hasKey . "serviceEnabled")) (.serviceEnabled) }}
{{- $type := default "service" .type -}}
{{- if or (eq "service" $type) (eq "external" $type) }}

{{- $numberOfPaths := concat (dig "paths" (list) $service) (dig "sidecar" "paths" (list) $service) | len -}}



{{- if gt $numberOfPaths 0 }}
{{- if eq "gce" $root.Values.ingress.class }}
{{- if or (not (hasKey $root.Values.ingress "enabled")) ($root.Values.ingress.enabled) }}
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: {{ template "myfullname" $root }}-{{ $serviceName }}
spec:
  {{- if not .livenessDisabled }}
  {{- if not .livenessCommand }}
  healthCheck:
    checkIntervalSec: {{ coalesce .livenessPeriod $defaults.livenessPeriod 10 }}
    timeoutSec: {{ coalesce .livenessTimeout $defaults.livenessTimeout 3 }}
    healthyThreshold: {{ coalesce .livenessSuccessThreshold $defaults.livenessSuccessThreshold 1 }}
    unhealthyThreshold: {{ coalesce .livenessFailureThreshold $defaults.livenessFailureThreshold 3 }}
    type: HTTP
    requestPath: {{ coalesce .livenessPath $defaults.livenessPath }}
    port: {{ coalesce .livenessPort .port $defaults.port }}
  {{- end }}
  {{- end }}
  {{- if .readTimeout | default $defaults.readTimeout }}
  timeoutSec: {{ .readTimeout | default $defaults.readTimeout | quote }}
  {{- end }}
  {{- if .wafSecurityPolicyName | default $defaults.wafSecurityPolicyName }}
  securityPolicy:
    name: {{ .wafSecurityPolicyName | default $defaults.wafSecurityPolicyName | quote }}
  {{- end }}
---
{{- end }}
{{- end }}
{{- end }}



{{- if gt $numberOfPaths 0 }}
{{- if eq "gcp-gateway" $root.Values.ingress.class }}
{{- if or (not (hasKey $root.Values.ingress "enabled")) ($root.Values.ingress.enabled) }}

{{- if not .livenessDisabled }}
{{- if not .livenessCommand }}
apiVersion: networking.gke.io/v1
kind: HealthCheckPolicy
metadata:
  name: {{ template "myfullname" $root }}-{{ $serviceName }}
spec:
  default:
    checkIntervalSec: {{ coalesce .livenessPeriod $defaults.livenessPeriod 10 }}
    timeoutSec: {{ coalesce .livenessTimeout $defaults.livenessTimeout 3 }}
    healthyThreshold: {{ coalesce .livenessSuccessThreshold $defaults.livenessSuccessThreshold 1 }}
    unhealthyThreshold: {{ coalesce .livenessFailureThreshold $defaults.livenessFailureThreshold 3 }}
    logConfig:
      enabled: {{ $root.Values.global.debug | default false }}
    config:
      type: HTTP
      httpHealthCheck:
        port: {{ coalesce .livenessPort .port $defaults.port }}
        requestPath: {{ coalesce .livenessPath $defaults.livenessPath }}
  targetRef:
    group: ""
    kind: Service
    name: {{ template "myfullname" $root }}-{{ $serviceName }}
---
{{- end }}
{{- end }}

apiVersion: networking.gke.io/v1
kind: GCPBackendPolicy
metadata:
  name: {{ template "myfullname" $root }}-{{ $serviceName }}
spec:
  default:
    logging:
      enabled: true
    {{- if .wafSecurityPolicyName | default $defaults.wafSecurityPolicyName }}
    securityPolicy: {{ .wafSecurityPolicyName | default $defaults.wafSecurityPolicyName | quote }}
    {{- end }}
    {{- if .readTimeout | default $defaults.readTimeout }}
    timeoutSec: {{ .readTimeout | default $defaults.readTimeout | quote }}
    {{- end }}
    connectionDraining:
      drainingTimeoutSec: {{ .drainingTimeoutSeconds | default $defaults.drainingTimeoutSeconds }}
  targetRef:
    group: ""
    kind: Service
    name: {{ template "myfullname" $root }}-{{ $serviceName }}
---

{{- end }}
{{- end }}
{{- end }}

# TODO: service capacity and traffic-based autoscaling https://cloud.google.com/kubernetes-engine/docs/concepts/traffic-management

apiVersion: v1
kind: Service
metadata:
  name: {{ template "myfullname" $root }}-{{ $serviceName }}
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
    {{- if gt $numberOfPaths 0 }}
    {{- if eq "gce" $root.Values.ingress.class }}
    {{- if or (not (hasKey $root.Values.ingress "enabled")) ($root.Values.ingress.enabled) }}
    cloud.google.com/backend-config: '{"default": "{{ template "myfullname" $root }}-{{ $serviceName }}"}'
    {{- end }}
    {{- end }}
    {{- end }}
spec:
  selector:
    app: {{ template "myname" $root }}
    release: {{ $root.Release.Name }}
    {{- if default $defaults.tier .tier }}
    tier: {{ default $defaults.tier .tier }}
    {{- end }}
    role: {{ $serviceName }}
  ports:
    - name: service
      protocol: {{ .protocol | default "TCP" }}
      port: {{ .port | default $defaults.port }}
      {{- if .targetPort }}
      targetPort: {{ .targetPort }}
      {{- end }}
    {{- range $p := .ports }}
    - name: {{ $p.port | quote }}
      protocol: {{ $p.protocol | default "TCP" }}
      port: {{ $p.port }}
      {{- if $p.targetPort }}
      targetPort: {{ $p.targetPort }}
      {{- end }}
    {{- end }}
    {{- if .sidecar }}
    {{- if .sidecar.enabled }}
    {{- if .sidecar.port }}
    - name: sidecar
      protocol: {{ .sidecar.protocol | default "TCP" }}
      port: {{ .sidecar.port }}
      {{- if .sidecar.targetPort }}
      targetPort: {{ .sidecar.targetPort }}
      {{- end }}
    {{- range $p := .sidecar.ports }}
    - name: {{ $p.port | quote }}
      protocol: {{ $p.protocol | default "TCP" }}
      port: {{ $p.port }}
      {{- if $p.targetPort }}
      targetPort: {{ $p.targetPort }}
      {{- end }}
    {{- end }}
    {{- end }}
    {{- end }}
    {{- end }}
  {{- if eq $type "external" }}
  type: LoadBalancer
  loadBalancerIP: {{ .externalIP }}
  {{- end }}
---
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
